import streamlit as st
from core.project.project_model import Chapter, Scene
from core.project.project_manager import (
    list_projects,
    create_project,
    load_project,
    save_project,
    delete_project,
)


def project_editor_ui():
    st.sidebar.header("–ü—Ä–æ–µ–∫—Ç—ã")

    # –°–ø–∏—Å–æ–∫ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –ø—Ä–æ–µ–∫—Ç–æ–≤
    projects = list_projects()
    selected_project_name = st.sidebar.selectbox("–í—ã–±–µ—Ä–∏—Ç–µ –ø—Ä–æ–µ–∫—Ç", projects)

    # –°–æ–∑–¥–∞–Ω–∏–µ –Ω–æ–≤–æ–≥–æ –ø—Ä–æ–µ–∫—Ç–∞
    with st.sidebar.expander("‚ûï –ù–æ–≤—ã–π –ø—Ä–æ–µ–∫—Ç"):
        new_project_name = st.text_input("–ù–∞–∑–≤–∞–Ω–∏–µ –ø—Ä–æ–µ–∫—Ç–∞")
        if st.button("–°–æ–∑–¥–∞—Ç—å –ø—Ä–æ–µ–∫—Ç") and new_project_name:
            create_project(new_project_name)
            st.rerun()

    # –£–¥–∞–ª–µ–Ω–∏–µ –ø—Ä–æ–µ–∫—Ç–∞ —Å –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ–º
    if selected_project_name:
        with st.sidebar.expander("üóëÔ∏è –£–¥–∞–ª–∏—Ç—å –ø—Ä–æ–µ–∫—Ç"):
            st.warning(f"–ü—Ä–æ–µ–∫—Ç: {selected_project_name}")
            confirm_delete = st.checkbox("–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å —É–¥–∞–ª–µ–Ω–∏–µ")
            if st.button("–£–¥–∞–ª–∏—Ç—å –ø—Ä–æ–µ–∫—Ç") and confirm_delete:
                delete_project(selected_project_name)
                st.rerun()

    if selected_project_name:
        project = load_project(selected_project_name)
        st.sidebar.markdown("---")

        st.title(f"–ü—Ä–æ–µ–∫—Ç: {project.title}")
        st.markdown("## üìö –°—Ç—Ä—É–∫—Ç—É—Ä–∞ –∏ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ")

        for ch in project.chapters:
            st.markdown(f"### üìñ {ch.title}")
            new_ch_title = st.text_input(
                f"–ù–∞–∑–≤–∞–Ω–∏–µ –≥–ª–∞–≤—ã", value=ch.title, key=f"ch_title_{ch.title}")
            if new_ch_title != ch.title:
                ch.title = new_ch_title
                save_project(project)

            if st.button(f"‚ùå –£–¥–∞–ª–∏—Ç—å –≥–ª–∞–≤—É '{ch.title}'", key=f"del_ch_{ch.title}"):
                project.chapters = [c for c in project.chapters if c != ch]
                save_project(project)
                st.rerun()

            new_scene_title = st.text_input(
                "–ù–∞–∑–≤–∞–Ω–∏–µ –Ω–æ–≤–æ–π —Å—Ü–µ–Ω—ã", key=f"new_scene_{ch.title}")
            if st.button("–î–æ–±–∞–≤–∏—Ç—å —Å—Ü–µ–Ω—É", key=f"add_scene_{ch.title}") and new_scene_title:
                ch.scenes.append(Scene(title=new_scene_title, content=""))
                save_project(project)
                st.rerun()

            for sc in ch.scenes:
                st.markdown(f"#### ‚úèÔ∏è –°—Ü–µ–Ω–∞: {sc.title}")
                sc_title = st.text_input(
                    "–ù–∞–∑–≤–∞–Ω–∏–µ —Å—Ü–µ–Ω—ã", value=sc.title, key=f"sc_title_{ch.title}_{sc.title}")
                sc_content = st.text_area(
                    "–¢–µ–∫—Å—Ç —Å—Ü–µ–Ω—ã", value=sc.content, height=300, key=f"sc_text_{ch.title}_{sc.title}")

                if st.button("–°–æ—Ö—Ä–∞–Ω–∏—Ç—å —Å—Ü–µ–Ω—É", key=f"save_scene_{ch.title}_{sc.title}"):
                    sc.title = sc_title
                    sc.content = sc_content
                    save_project(project)
                    st.success("–°—Ü–µ–Ω–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∞")

                if st.button("‚ùå –£–¥–∞–ª–∏—Ç—å —Å—Ü–µ–Ω—É", key=f"del_scene_{ch.title}_{sc.title}"):
                    ch.scenes = [s for s in ch.scenes if s != sc]
                    save_project(project)
                    st.rerun()

        # –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –Ω–æ–≤–æ–π –≥–ª–∞–≤—ã
        st.markdown("---")
        st.subheader("‚ûï –î–æ–±–∞–≤–∏—Ç—å –≥–ª–∞–≤—É")
        new_chapter_title = st.text_input(
            "–ù–∞–∑–≤–∞–Ω–∏–µ –Ω–æ–≤–æ–π –≥–ª–∞–≤—ã", key="new_chapter")
        if st.button("–î–æ–±–∞–≤–∏—Ç—å –≥–ª–∞–≤—É") and new_chapter_title:
            project.chapters.append(Chapter(title=new_chapter_title))
            save_project(project)
            st.rerun()
